version: 2
jobs:
  test:
    working_directory: ~/circle
    docker:
      - image: ministryofjustice/ruby:2.5.1
        environment:
          RAILS_ENV: test
    steps:
      - checkout
      - run:
          name: bundle install
          command: 'bundle install --deployment --jobs=2 --retry 3 --without development'
      - run:
          name: test
          command: 'bundle exec rspec'
  build:
    working_directory: ~/circle/git/fb-service-token-cache
    docker:
      - image: asmega/fb-builder:latest
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "4a:a2:34:ab:96:b7:42:45:86:7c:bd:ce:ee:70:2a:28"
      - run:
          name: checkout fb-service-token-cache-deploy
          command: "GIT_SSH_COMMAND='ssh -v -i ~/.ssh/id_rsa_4aa234ab96b74245867cbdceee702a28 -o \"IdentitiesOnly=yes\"' git clone git@github.com:ministryofjustice/fb-service-token-cache-deploy.git ~/circle/git/fb-service-token-cache-deploy"
      - run:
          name: npm install
          command: 'npm install'
      - setup_remote_docker
      - run:
          name: KUBE_CERTIFICATE_AUTHORITY to disk
          command: 'echo -n "$KUBE_CERTIFICATE_AUTHORITY" | base64 -d > /root/circle/.kube_certificate_authority'
      - run:
          name: kubectl configure cluster
          command: 'kubectl config set-cluster "$KUBE_CLUSTER" --certificate-authority="/root/circle/.kube_certificate_authority" --server="$KUBE_SERVER"'
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci" --token="$KUBE_TOKEN"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci" --cluster="$KUBE_CLUSTER" --user="circleci" --namespace="formbuilder-repos"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci'
      - run:
          name: build and push docker images
          command: 'cd ~/circle/git/fb-service-token-cache && ./scripts/build_platform_images.sh -p test'

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
